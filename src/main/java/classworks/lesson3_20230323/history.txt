  116  echo $BASH_VERSINFO
  117  echo $BASH_VERSINFO[5]
  118  echo $BASH_VERSINFO[1][5]
  119  echo $BASH_VERSINFO[1][2][5]
  120  echo ${BASH_VERSINFO[5]}
  121  echo ${MYSTRING}
  122  clear
  123  history
  124  man 1 open
  125  pwd
  126  ls *
  127  ls
  128  ls  afile afile.copied to
  129  cat > afile2 << EOF
  130  Some text
  131  EOF
  132  grep '.*' afile2
  133  clear
  134  mkdir itb_loops
  135  cd itb_loops
  136  pwd
  137  [A done
  138  for (( i=0l i < 20; i++ )); do echo $i; echo $i > file${i}.txt; done
  139  for (( i=0; i < 20; i++ )); do echo $i; echo $i > file${i}.txt; done
  140  ls
  141  for f in file0.txt file1.txt file2.txt; do echo "File $f contains: $(cat $f)"; done
  142  for f in $(ls *txt); do echo "File $f contains: $(cat $f)"; done
  143  clear
  144  n=0
  145  while [ $n -lt 10]; do ((n++)); echo iteration $n; done
  146  while [[ $n -lt 10]]; do ((n++)); echo iteration $n; done
  147  while [[ $n -lt 10]] do ((n++)); echo iteration $n; done
  148  while [ $n -lt 10 ] do ((n++)); echo iteration $n; done
  149  while [ $n -lt 10 ]; do ((n++)); echo iteration $n; done
  150  clear
  151  hostname
  152  echo "My hostname: hostname"
  153  echo "My hostname: $(hostname)"
  154  echo 'My hostname: $(hostname)'
  155  echo 'My hostname: `hostname)`'
  156  echo 'My hostname: `hostname`'
  157  echo "My hostname: `hostname`"
  158  mkdir itb_cmdsub
  159  cd itb_cmdsub
  160  pwd
  161  touch a b
  162  ls
  163  ls a b
  164  ls $(echo a b)
  165  ls `echo a `echo b``
  166  ls aecho b
  167  find ~ -iname '*jpg'
  168  history
  169  cd ~
  170  ls
  171  cd bashin3weeks/
  172  pwd
  173  ls
  174  history > Oreilly_BashScripting1.txt
  175  export_file Oreilly_BashScripting1.txt 
  176  export -f [200~Oreilly_BashScripting1.txt
  177  export -f Oreilly_BashScripting1.txt 
  178  export_file "Oreilly_BashScripting1.txt"
  179  find
  180  cd ~
  181  [ 1 = 0 ]
  182  echo $?
  183  gotelran 
  184  gotelran 
  185  clear
  186  gotelran 
  187  gotelran 
  188  gotelran 
  189  #!/bin/bash
  190  USER=Olga
  191  CHISLO=$(date)
  192  DIR=$(pwd)
  193  PROCESS=$(ps -ef | wc -l)
  194  PRAVA=$(ls -la /etc/passwd | awk '{ print $1 }')
  195  PROCESS=$(($PROCESS-1))
  196  echo $CHISLO
  197  echo "Hello, $USER!"
  198  echo $DIR
  199  echo $PROCESS
  200  echo $PRAVA
  201  javac -version
  202  gotelran 
  203  gotelran 
  204  gotelran 
  205  gotelran 
  206  gotelran 
  207  gotelran 
  208  gotelran 
  209  [200~
  210  git config --global user.mname
  211  git version
  212  git config --global user.email
  213  pwd
  214  cd e:/
  215  pwd
  216  cd E:/Courses/TelRan/git_classworks/
  217  git config --global
  218  git config --global user.name
  219  git config --global user.email
  220  cd
  221  ls -al
  222  cd.ssh/
  223  cd .ssh/
  224  ls
  225  cat id_rsa.pub
  226  cd E:/Courses/TelRan/git_classworks/
  227  pwd
  228  ls
  229  git clone git@github.com:odemyanenko/git_classworks.git
  230  cd git_classworks/
  231  ls
  232  git remote -v
  233  nano song.txt
  234  ls
  235  cat song.txt 
  236  git status
  237  git add song.txt 
  238  git status
  239  git commit -m "add song.txt"
  240  git status
  241  git status
  242  git push
  243  git log
  244  pwd
  245  cd .
  246  cd ./
  247  pwd
  248  cd ../
  249  cd ../
  250  ls
  251  cd algorithms_homeworks/
  252  pwd
  253  echo "same text" > NewFile.txt
  254  ls
  255  git init
  256  git status
  257  git add .
  258  git status
  259  git commit -m "Add new files"
  260  git status
  261  git log
  262  git remote -v
  263  git remote add origin git@github.com:odemyanenko/algorithms_homeworks.git
  264  git remote -v
  265  git log
  266  git branch -M main
  267  git log
  268  git remote -v
  269  git push -u origin main
  270  git log
  271  git log
  272  ะดั
  273  ls
  274  rm *.txt
  275  ls
  276  git status
  277  git restore .
  278  ls
  279  history > history.txt
  280  cat history.txt 
  281  export_file history.txt 
  282  ls
  283  ipconfig
  284  cd E:/
  285  ls
  286  cd Courses/TelRan/prof_git/
  287  ls
  288  git remote -v
  289  git status
  290  ls
  291  ls src/
  292  cd src/
  293  ls
  294  cd main/
  295  ls
  296  cd resources/
  297  ls
  298  ls
  299  cd ../
  300  cd java/classworks/lesson2_20230316/
  301  ls
  302  pwd
  303  ls
  304  git status
  305  echo "Same text ">> song.txt
  306  cat song.txt 
  307  git commit -m "test"
  308  git push
  309  echo "New text ">> song.txt
  310  git checkout song.txt
  311  cat song.txt 
  312  echo "New text 1">> song.txt
  313  git status
  314  cat song.txt 
  315  git checkout song.txt
  316  git status
  317  cat song.txt 
  318  nano song.txt song.txt 
  319  cat song.txt 
  320  git status
  321  git add song.txt 
  322  git status
  323  git restore --stage song.txt 
  324  git status
  325  nano song.txt 
  326  git status
  327  git add song.txt 
  328  git status
  329  git commit -m "added 2 rows"
  330  git status
  331  > file.log
  332  ls
  333  git status
  334  git clean -xdn
  335  git clean -xdf
  336  ls
  337  nano song.txt 
  338  git status
  339  git add song.txt 
  340  git commit -m "add bad 4 row"
  341  git status
  342  git commit --amend -m "Add Bed 4 row"
  343  git log
  344  echo "Same text" > newfile.txt
  345  git status
  346  get add newfile.txt 
  347  git status
  348  git add newfile.txt 
  349  git status
  350  git commit --amend -m "Add newfile in BED commit"
  351  git log
  352  git reset HEAD~1
  353  git log
  354  git status
  355  cat song.txt 
  356  get restore song.txt 
  357  git restore song.txt 
  358  cat song.txt 
  359  git status
  360  nano song.txt 
  361  git add song.txt song.txt 
  362  git add song.txt
  363  git status
  364  git commit -m "Bed file " song.txt 
  365  git status
  366  git push
  367  git log
  368  git revert HEAD~
  369  git revert HEAD
  370  git revert HEAD
  371  git status
  372  cat song.txt 
  373  git status
  374  git log
  375  git status
  376  cta newfile.txt 
  377  cat newfile.txt 
  378  git restore --stage newfile.txt 
  379  git status
  380  git status
  381  git clean --stage newfile.txt 
  382  git clean -xdn
  383  git clean -xdf
  384  git status
  385  git revert HEAD
  386  git log
  387  git status
  388  git push
  389  git log
  390  git reset HEAD~2
  391  git log
  392  git push
  393  git push --force
  394  ls -al
  395  rm -rf *.txt
  396  ls la
  397  ls -la
  398  git status
  399  git restore song.txt 
  400  ls
  401  cat song.txt 
  402  > file.log
  403  > file.error
  404  ls
  405  ls -la
  406  nano /E:/Courses/TelRan/prof_git/.gitignore
  407  cd ../
  408  cd ../
  409  cd ../
  410  cd ../
  411  ls
  412  cd ../
  413  ls
  414  ls -la
  415  nano .gitignore
  416  cat .gitignore 
  417  git status
  418  git add .gitignore 
  419  git status
  420  git commit -m "changed .gitignore"
  421  git push
  422  git status
  423  history > history20230316.txt
  424  git status
  425  pwd
  426  cd src/main/java/classworks/lesson2_20230316/
  427  pwd
  428  git branch test
  429  git status
  430  git branch -v
  431  git checkout test
  432  git branch -v
  433  git checkout -b test1
  434  git branch -v
  435  git checkout main
  436  git branch -v
  437  git checkout mmaster
  438  git checkout master
  439  git branch -v
  440  git branch -d test1
  441  git checkout test
  442  ls -al
  443  nano songNew.txt
  444  git status
  445  git add .
  446  git status
  447  git commit -m "Add songNew"
  448  git log
  449  git log --oneline
  450  nano songNew.txt 
  451  git status
  452  git add .
  453  git commit -m "add 3 line"
  454  git log
  455  git log --oneline
  456  git log --oneline --decorate --graph --all
  457  git checkout main
  458  git branch -v
  459  git checkout master
  460  git branch -v
  461  git merge test
  462  git log --oneline --decorate --graph --all
  463  git push
  464  git branch -v
  465  nano songNew.txt 
  466  git add .
  467  git commit -m "change 5 step"
  468  git checkout test
  469  git branch -v
  470  nano songNew.txt 
  471  git add .
  472  git commit -m "change 5 test step"
  473  git log --oneline --decorate --graph --all
  474  git push
  475  git push --set-upstream origin test
  476  git branch -v
  477  git checkout master
  478  git branch -v
  479  git merge test
  480  nano songNew.txt 
  481  git status
  482  git add songNew.txt 
  483  git status
  484  git commit
  485  git log --oneline --decorate --graph --all
  486  git checkout test
  487  ls
  488  cat songNew.txt 
  489  git checkout master
  490  git branch -d test
  491  git log --oneline --decorate --graph --all
  492  git push
  493  history > history_20230316.txt
  494  ls
  495  git add .
  496  git commit -m "add history lesson"
  497  git push
  498  cd E:cd
  499  pwd
  500  cd e:
  501  ls
  502  cd /Cources
  503  cd Courses/TelRan
  504  ls
  505  cd prof_git/
  506  git log --oneline
  507  [200~git filter-branch --index-filter 'git rm --cached FILE-NAME --ignore-unmatch' --prune-empty --tag-name-filter cat -- --all
  508  git filter-branch --index-filter 'git rm --cached songNew.txt --ignore-unmatch' --prune-empty --tag-name-filter cat -- --all
  509  git push
  510  git status
  511  ls -al
  512  git add .
  513  git status
  514  git push --force
  515  git log --oneline
  516  git reset HEAD~2
  517  git log --oneline
  518  git reflog
  519  git status
  520  git reset --hard 7f7f15f
  521  git status
  522  git reset --hard e2c6e81
  523  git status
  524  git log -g
  525  git status
  526  git add .
  527  git status
  528  git commit -m "add lesson3"
  529  git status
  530  git push
  531  git status
  532  cd src/main/java/classworks/lesson3_20230323/
  533  pwd
  534  git checkout -b "lesson 3"
  535  git checkout -b "lesson_3"
  536  git status
  537  git branch -v
  538  nano NewFile.txt
  539  git add .
  540  git commit -m "add newfile"
  541  git log --online
  542  git log --oneline
  543  git push
  544   git push --set-upstream origin lesson_3
  545  git checkout master
  546  git branch -v
  547  git pull
  548  git branch -v
  549  git branch -d lesson_3
  550  git status
  551  git add .
  552  git commit -m "delete branch"
  553  git status
  554  clear
  555  ls -la
  556  git status
  557  git log
  558  git log --oneline
  559  ls -la
  560  nano song.txt 
  561  git add song.txt 
  562  git status
  563  git commit -m "changed song.txt"
  564  git commit --amend -m "--changes"
  565  git log --oneline
  566  ls -la
  567  echo "Something" > song1.txt
  568  ls
  569  cat song1.txt 
  570  git status
  571  git add song1.txt
  572  git status
  573  git commit --amend -m "changed + new file" 
  574  git status
  575  git commit --amend -m "changed + new file 2" song1.txt
  576  git log
  577  git log --oneline
  578  git push
  579  clear
  580  ls -la
  581  nano song1.txt 
  582  git add song1.txt 
  583  git commit -m "changed song1"
  584  git status
  585  git log --oneline 
  586  git revert HEAD
  587  cat song1.txt 
  588  git log --oneline 
  589  git reset HEAD~2
  590  git log --oneline 
  591  ls
  592  cat song1.txt 
  593  git reflog
  594  git reset --hard c919405
  595  git log --oneline 
  596  cat song1.txt 
  597  git status
  598  git push
  599  git remote -v
  600  touch olga.txt
  601  git status
  602  git add olga.txt 
  603  git status
  604  git commit -m "added file olga"
  605  git status
  606  git log --oneline 
  607  git push
  608  git rm olga.txt 
  609  git status
  610  ls -la
  611  git commit -m "delete olga.txt"
  612  git status
  613  git push
  614  git log --oneline 
  615  history > history.txt
